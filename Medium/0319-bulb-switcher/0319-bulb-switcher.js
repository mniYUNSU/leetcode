/**
 * @param {number} n
 * @return {number}
 */
var bulbSwitch = function(n) {
    // 1. 모든 전구를 켬
    // 2. 2번째 전구마다 불이 꺼짐
    // 3. 3번째 전구마다 전구 토글
    // 4. n번째 전구마다 전구 토글
    // 5. 마지막 라운드엔 마지막 전구만 토글
    // 켜진 전구 수 리턴
    
    return Math.floor(Math.sqrt(n));
};

// n : 6
// 1 1 1 1 1 1 
// 1 0 1 0 1 0
// 1 0 0 0 1 1
// 1 0 0 1 1 1
// 1 0 0 1 0 1
// 1 0 0 1 0 0

// 첫번째 전구 : n1 일때 토글
// 두번째 전구 : n1, n2일때 토글 - 켜졌다 꺼짐
// 세번째 전구 : n1, n3일때 토글 - 켜졌다 꺼짐
// 네번째 전구 : n1, n2, n4때 토글 - 켜졌다 꺼졌다 켜짐
// 다섯번째 전구 : n1, n5일때 토글 - 켜졌다 꺼짐
// 여섯번째 전구 : n1, n2, n3, n6 일때 토글 - 켜졌다 꺼짐

// --> 라운드의 인수에 해당되는 전구가 토글된다.
// 인수의 갯수가 홀수인 전구는 (첫번째, 네번째) 반드시 껐다가 켜지게 됨
// 인수의 갯수가 홀수라는 것은 즉 n 이 완전제곱수라는 것이 된다. (2, 4, 9, 16...)
// 그러므로 루트(n) 값을 리턴하면 된다.
// n이 완전제곱수가 아니라면 (ex: 6) 루트(6)은 2.xxxx이 된다.
// 소숫점아래를 버리면 2가 된다. 즉 켜진 전구는 2가 된다.


